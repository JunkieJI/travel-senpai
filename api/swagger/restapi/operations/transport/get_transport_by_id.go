// Code generated by go-swagger; DO NOT EDIT.

package transport

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// GetTransportByIDHandlerFunc turns a function with the right signature into a get transport by ID handler
type GetTransportByIDHandlerFunc func(GetTransportByIDParams) middleware.Responder

// Handle executing the request and returning a response
func (fn GetTransportByIDHandlerFunc) Handle(params GetTransportByIDParams) middleware.Responder {
	return fn(params)
}

// GetTransportByIDHandler interface for that can handle valid get transport by ID params
type GetTransportByIDHandler interface {
	Handle(GetTransportByIDParams) middleware.Responder
}

// NewGetTransportByID creates a new http.Handler for the get transport by ID operation
func NewGetTransportByID(ctx *middleware.Context, handler GetTransportByIDHandler) *GetTransportByID {
	return &GetTransportByID{Context: ctx, Handler: handler}
}

/*GetTransportByID swagger:route GET /transport/{id} Transport getTransportById

Get Transport By ID

*/
type GetTransportByID struct {
	Context *middleware.Context
	Handler GetTransportByIDHandler
}

func (o *GetTransportByID) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewGetTransportByIDParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
