// Code generated by go-swagger; DO NOT EDIT.

package destinations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// UpdateDestinationHandlerFunc turns a function with the right signature into a update destination handler
type UpdateDestinationHandlerFunc func(UpdateDestinationParams) middleware.Responder

// Handle executing the request and returning a response
func (fn UpdateDestinationHandlerFunc) Handle(params UpdateDestinationParams) middleware.Responder {
	return fn(params)
}

// UpdateDestinationHandler interface for that can handle valid update destination params
type UpdateDestinationHandler interface {
	Handle(UpdateDestinationParams) middleware.Responder
}

// NewUpdateDestination creates a new http.Handler for the update destination operation
func NewUpdateDestination(ctx *middleware.Context, handler UpdateDestinationHandler) *UpdateDestination {
	return &UpdateDestination{Context: ctx, Handler: handler}
}

/*UpdateDestination swagger:route PUT /destinations/{id} Destinations updateDestination

Update Destination

*/
type UpdateDestination struct {
	Context *middleware.Context
	Handler UpdateDestinationHandler
}

func (o *UpdateDestination) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewUpdateDestinationParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
