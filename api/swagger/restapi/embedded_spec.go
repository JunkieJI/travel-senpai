// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

// SwaggerJSON embedded version of the swagger document used at generation time
var SwaggerJSON json.RawMessage

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "title": "Dashboard"
  },
  "host": "localhost:3000",
  "paths": {
    "/destinations": {
      "get": {
        "tags": [
          "Destinations"
        ],
        "summary": "Destinations",
        "operationId": "GetDestinations",
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/destination"
              }
            }
          },
          "400": {
            "$ref": "#/responses/trait:global:400"
          },
          "404": {
            "$ref": "#/responses/trait:global:404"
          },
          "500": {
            "$ref": "#/responses/trait:global:500"
          }
        }
      },
      "post": {
        "tags": [
          "Destinations"
        ],
        "summary": "Create Destination",
        "operationId": "CreateDestination",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/destination"
            }
          },
          {
            "type": "string",
            "name": "Accept-Languge",
            "in": "header"
          }
        ],
        "responses": {
          "201": {
            "schema": {
              "$ref": "#/definitions/destination"
            }
          },
          "400": {
            "$ref": "#/responses/trait:global:400"
          },
          "404": {
            "$ref": "#/responses/trait:global:404"
          },
          "500": {
            "$ref": "#/responses/trait:global:500"
          }
        }
      }
    },
    "/destinations/{id}": {
      "get": {
        "tags": [
          "Destinations"
        ],
        "summary": "Destination By ID",
        "operationId": "GetDestinationByID",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/destination"
            }
          },
          "400": {
            "$ref": "#/responses/trait:global:400"
          },
          "404": {
            "$ref": "#/responses/trait:global:404"
          },
          "500": {
            "$ref": "#/responses/trait:global:500"
          }
        }
      },
      "put": {
        "tags": [
          "Destinations"
        ],
        "summary": "Update Destination",
        "operationId": "UpdateDestination",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/destination"
            }
          },
          {
            "type": "string",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/destination"
            }
          },
          "400": {
            "$ref": "#/responses/trait:global:400"
          },
          "404": {
            "$ref": "#/responses/trait:global:404"
          },
          "500": {
            "$ref": "#/responses/trait:global:500"
          }
        }
      },
      "delete": {
        "tags": [
          "Destinations"
        ],
        "summary": "Delete Destination By ID",
        "operationId": "DeleteDestinationByID",
        "parameters": [
          {
            "type": "string",
            "name": "Accept-Language",
            "in": "header"
          }
        ],
        "responses": {
          "204": {},
          "400": {
            "$ref": "#/responses/trait:global:400"
          },
          "404": {
            "$ref": "#/responses/trait:global:404"
          },
          "500": {
            "$ref": "#/responses/trait:global:500"
          }
        }
      },
      "parameters": [
        {
          "type": "integer",
          "name": "id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/transport/{id}": {
      "get": {
        "tags": [
          "Transport"
        ],
        "summary": "Get Transport By ID",
        "operationId": "GetTransportByID",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/tranport"
            }
          }
        }
      },
      "parameters": [
        {
          "type": "string",
          "name": "id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/trips": {
      "get": {
        "tags": [
          "trip",
          "Trips"
        ],
        "summary": "Trips",
        "operationId": "GetTrips",
        "responses": {
          "200": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/trip"
              }
            }
          },
          "400": {
            "$ref": "#/responses/trait:global:400"
          },
          "404": {
            "$ref": "#/responses/trait:global:404"
          },
          "500": {
            "$ref": "#/responses/trait:global:500"
          }
        }
      }
    },
    "/trips/{id}": {
      "get": {
        "tags": [
          "trip",
          "Trips"
        ],
        "summary": "Trip By ID",
        "operationId": "GetTripByID",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/trip"
            },
            "examples": {
              "application/json": {
                "": "pariatur do dolore"
              }
            }
          },
          "400": {
            "$ref": "#/responses/trait:global:400"
          },
          "404": {
            "$ref": "#/responses/trait:global:404"
          },
          "500": {
            "$ref": "#/responses/trait:global:500"
          }
        }
      },
      "parameters": [
        {
          "type": "integer",
          "name": "id",
          "in": "path",
          "required": true
        }
      ]
    }
  },
  "definitions": {
    "destination": {
      "type": "object",
      "title": "Destination",
      "properties": {
        "budget": {
          "type": "integer"
        },
        "city": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "currency": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        }
      }
    },
    "tranport": {
      "type": "object",
      "title": "Tranport",
      "properties": {
        "arrival_date": {
          "type": "string"
        },
        "arrival_time": {
          "type": "string"
        },
        "cost": {
          "type": "integer"
        },
        "departure_date": {
          "type": "string"
        },
        "departure_time": {
          "type": "string"
        },
        "destination_id": {
          "type": "integer"
        },
        "id": {
          "type": "integer"
        },
        "layover": {
          "type": "string"
        },
        "type": {
          "type": "string"
        }
      }
    },
    "trip": {
      "type": "object",
      "title": "Trip",
      "properties": {
        "id": {
          "type": "integer"
        }
      }
    }
  },
  "responses": {
    "trait:global:400": {
      "schema": {
        "type": "string"
      }
    },
    "trait:global:404": {
      "schema": {
        "type": "string"
      }
    },
    "trait:global:500": {
      "schema": {
        "type": "string"
      }
    }
  }
}`))
}
